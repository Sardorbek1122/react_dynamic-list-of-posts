{"version":3,"sources":["components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/api.ts","api/comments.ts","api/posts.ts","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPostId","onPostSelect","className","map","post","userId","title","id","type","onClick","NewCommentForm","onAddComment","useState","newName","setNewName","newEmail","setNewEmail","newBody","setNewBody","onSubmit","event","preventDefault","postId","name","email","body","placeholder","required","value","onChange","target","BASE_URL","getPostComments","a","fetch","postComments","json","deleteComment","commentId","method","addComment","comment","headers","JSON","stringify","newComment","getUserPosts","path","userPosts","getPostDetails","postDetails","PostDetails","setPostDetails","comments","setComments","showComments","setShowComments","useEffect","Promise","all","loadedPostDetails","loadedComments","addingComment","filter","App","selectedUserId","setSelectedUserId","setPosts","setSelectedPostId","loadedPosts","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.501a22d9.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport { Post } from '../../react-app-env';\n\ninterface Props {\n  posts: Post[];\n  selectedPostId: number;\n  onPostSelect:(postId: number) => void\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPostId,\n  onPostSelect,\n}) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>{`[User #${post.userId}]:`}</b>\n            {post.title}\n          </div>\n          {post.id !== selectedPostId ? (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => onPostSelect(post.id)}\n            >\n              Open\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => onPostSelect(0)}\n            >\n              Close\n            </button>\n          )}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\nimport { NewComment } from '../../react-app-env';\n\ninterface Props {\n  selectedPostId: number;\n  onAddComment: (newComment: NewComment) => void;\n}\n\nexport const NewCommentForm: React.FC<Props> = ({\n  selectedPostId,\n  onAddComment,\n}) => {\n  const [newName, setNewName] = useState('');\n  const [newEmail, setNewEmail] = useState('');\n  const [newBody, setNewBody] = useState('');\n\n  const clearForm = () => {\n    setNewName('');\n    setNewEmail('');\n    setNewBody('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newComment: NewComment = {\n      postId: selectedPostId,\n      name: newName,\n      email: newEmail,\n      body: newBody,\n    };\n\n    onAddComment(newComment);\n    clearForm();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n          value={newName}\n          onChange={event => setNewName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n          value={newEmail}\n          onChange={event => setNewEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={newBody}\n          onChange={event => setNewBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\nimport { Comment, NewComment } from '../react-app-env';\n\nexport const getPostComments = async (postId:number): Promise<Comment[]> => {\n  const postComments = await fetch(`${BASE_URL}/comments?postId=${postId}`);\n\n  return postComments.json();\n};\n\nexport const deleteComment = async (commentId: number): Promise<void> => {\n  await fetch(`${BASE_URL}/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const addComment = async (comment: NewComment):Promise<Comment> => {\n  const newComment = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(comment),\n  });\n\n  return newComment.json();\n};\n","import { BASE_URL } from './api';\nimport { Post } from '../react-app-env';\n\nexport const getUserPosts = async (userId: number): Promise<Post[]> => {\n  const path = userId === 0 ? '/posts' : `/posts?userId=${userId}`;\n  const userPosts = await fetch(`${BASE_URL}${path}`);\n\n  return userPosts.json();\n};\n\nexport const getPostDetails = async (postId: number): Promise<Post> => {\n  const postDetails = await fetch(`${BASE_URL}/posts/:${postId}`);\n\n  return postDetails.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { Comment, NewComment, Post } from '../../react-app-env';\nimport { addComment, deleteComment, getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\n\ninterface Props {\n  selectedPostId: number;\n}\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [showComments, setShowComments] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const [loadedPostDetails, loadedComments] = await Promise.all([\n        getPostDetails(selectedPostId),\n        getPostComments(selectedPostId),\n      ]);\n\n      setPostDetails(loadedPostDetails);\n      setComments(loadedComments);\n    })();\n  }, [selectedPostId]);\n\n  const removeComment = (commentId: number) => {\n    deleteComment(commentId);\n    setComments(comments.filter(comment => comment.id !== commentId));\n  };\n\n  const addingComment = async (comment: NewComment) => {\n    const newComment = await addComment(comment);\n\n    setComments([...comments, newComment]);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setShowComments(!showComments)}\n        >\n          {showComments ? 'Hide comments' : 'Show comments'}\n        </button>\n\n        {showComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            onAddComment={addingComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\nimport { Post } from './react-app-env';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const loadedPosts = await getUserPosts(selectedUserId);\n\n      setPosts(loadedPosts);\n    })();\n  }, [selectedUserId]);\n\n  const handleSelectPost = (postId: number) => {\n    setSelectedPostId(postId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => setSelectedUserId(Number(event.target.value))}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            onPostSelect={handleSelectPost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId !== 0\n            && <PostDetails selectedPostId={selectedPostId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}